# Define format for the table:
Data_summary1 <-
list("age2" =
list("0-1y" = ~ qwraps2::n_perc0(age2 == "0-1y", show_symbol = TRUE, na_rm = TRUE),
"2-3y"  = ~ qwraps2::n_perc0(age2 == "2-3y", show_symbol = TRUE, na_rm = TRUE),
"4-5y"  = ~ qwraps2::n_perc0(age2 == "4-5y", show_symbol = TRUE, na_rm = TRUE),
"6-7y"  = ~ qwraps2::n_perc0(age2 == "6-7y", show_symbol = TRUE, na_rm = TRUE),
"8-9y"  = ~ qwraps2::n_perc0(age2 == "8-9y", show_symbol = TRUE, na_rm = TRUE),
"10-11y"  = ~ qwraps2::n_perc0(age2 == "10-11y", show_symbol = TRUE, na_rm = TRUE),
"12-13y"  = ~ qwraps2::n_perc0(age2 == "12-13y", show_symbol = TRUE, na_rm = TRUE),
"14-15y"  = ~ qwraps2::n_perc0(age2 == "14-15y", show_symbol = TRUE, na_rm = TRUE),
"16-17y"  = ~ qwraps2::n_perc0(age2 == "16-17y", show_symbol = TRUE, na_rm = TRUE)),
"sex" =
list("boys" = ~ qwraps2::n_perc0(sex == "boys", show_symbol = TRUE, na_rm = TRUE),
"girls"  = ~ qwraps2::n_perc0(sex == "girls", show_symbol = TRUE, na_rm = TRUE)),
"burdenS" =
list("4" = ~ qwraps2::n_perc0(burdenS == "4", show_symbol = TRUE, na_rm = TRUE),
"5"  = ~ qwraps2::n_perc0(burdenS == "5", show_symbol = TRUE, na_rm = TRUE),
"6"  = ~ qwraps2::n_perc0(burdenS == "6", show_symbol = TRUE, na_rm = TRUE),
"7"  = ~ qwraps2::n_perc0(burdenS == "7", show_symbol = TRUE, na_rm = TRUE),
"8"  = ~ qwraps2::n_perc0(burdenS == "8", show_symbol = TRUE, na_rm = TRUE),
"9"  = ~ qwraps2::n_perc0(burdenS == "9", show_symbol = TRUE, na_rm = TRUE),
"10"  = ~ qwraps2::n_perc0(burdenS == "10", show_symbol = TRUE, na_rm = TRUE),
"11"  = ~ qwraps2::n_perc0(burdenS == "11", show_symbol = TRUE, na_rm = TRUE),
"12"  = ~ qwraps2::n_perc0(burdenS == "12", show_symbol = TRUE, na_rm = TRUE)),
"arztZ01" =
list("Mean (SD)" = ~ qwraps2::mean_sd(arztZ01, denote_sd = "paren", na_rm = TRUE, show_n = "never"))
)
summary_table(kiggs, Data_summary1)
library(foreign)
data <- read.spss("Data/KiGGS03_06.sav", to.data.frame=TRUE)
data
kiggs <- data[,c('E070M','E070V','E072','E074','arztZ01','sex','age2','schichtz','e065z')]
kiggs
# Formatting the data
kiggs$E070M    <- factor(kiggs$E070M,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E070V    <- factor(kiggs$E070V,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E072     <- factor(kiggs$E072,     labels = c("yes, regularly", "yes, from time to time", "no, never"))
kiggs$E074     <- factor(kiggs$E074,     labels = c("yes, regularly", "yes, from time to time", "no, never", "has not breastfed"))
kiggs$sex      <- factor(kiggs$sex,      labels = c("boys", "girls"))
kiggs$age2     <- factor(kiggs$age2,     labels = c("0-1y", "2-3y", "4-5y", "6-7y", "8-9y", "10-11y", "12-13y", "14-15y", "16-17y"))
kiggs$schichtz <- factor(kiggs$schichtz, labels = c("low social status", "medium social status", "high social status"))
#Saving the data in my computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
#Checking whether the variables E070M, E070V, E072, E074 are all factors or not
is.factor(kiggs$E070M)
is.factor(kiggs$E070V)
is.factor(kiggs$E072)
is.factor(kiggs$E074)
#Setting the value "has not breastfed" of variable E074 to NA for all children
kiggs["E074"][kiggs["E074"] == "has not breastfed"] <- "NA"
# Dropping the empty factor level or NA value from the variable
#kiggs[!is.na(kiggs$E074),]
kiggs = kiggs[complete.cases(kiggs[,c("E074")]),]
#Checking whether "has not breastfed" value is available or not
library(stringr)
check1 = kiggs[str_detect(kiggs$E074, "has not breastfed"), ]
print(paste(nrow(check1), "row found with has not breastfed value"))
# Checking whether empty factor has been removed or not
check2 = kiggs[str_detect(kiggs$E074, "NA"), ]
print(paste(nrow(check2), "row found with NA value"))
library(dplyr)
# The rank is "yes, regularly" = 1, "yes, from time to time" = 2, "no, never" = 3. Keeping NA value same.
RankForE070M = dense_rank(kiggs$E070M)
RankForE070V = dense_rank(kiggs$E070V)
RankForE072 = dense_rank(kiggs$E072)
RankForE074 = dense_rank(kiggs$E074)
burdenS = RankForE070M + RankForE070V + RankForE072 + RankForE074
burdenS
# Adding the burdenS variable to the kiggs dataset
kiggs["burdenS"] = burdenS
#updating the kiggs file that is saved in computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
# Absolute frequency table
AFage2 <- table(kiggs$age2)
AFsex <-  table(kiggs$sex)
AFburdenS <- table(kiggs$burdenS)
AFage2
AFsex
AFburdenS
library(qwraps2)
options(qwraps2_markup = "markdown")
# Define format for the table:
Data_summary1 <-
list("age2" =
list("0-1y" = ~ qwraps2::n_perc0(age2 == "0-1y", show_symbol = TRUE, na_rm = TRUE),
"2-3y"  = ~ qwraps2::n_perc0(age2 == "2-3y", show_symbol = TRUE, na_rm = TRUE),
"4-5y"  = ~ qwraps2::n_perc0(age2 == "4-5y", show_symbol = TRUE, na_rm = TRUE),
"6-7y"  = ~ qwraps2::n_perc0(age2 == "6-7y", show_symbol = TRUE, na_rm = TRUE),
"8-9y"  = ~ qwraps2::n_perc0(age2 == "8-9y", show_symbol = TRUE, na_rm = TRUE),
"10-11y"  = ~ qwraps2::n_perc0(age2 == "10-11y", show_symbol = TRUE, na_rm = TRUE),
"12-13y"  = ~ qwraps2::n_perc0(age2 == "12-13y", show_symbol = TRUE, na_rm = TRUE),
"14-15y"  = ~ qwraps2::n_perc0(age2 == "14-15y", show_symbol = TRUE, na_rm = TRUE),
"16-17y"  = ~ qwraps2::n_perc0(age2 == "16-17y", show_symbol = TRUE, na_rm = TRUE)),
"sex" =
list("boys" = ~ qwraps2::n_perc0(sex == "boys", show_symbol = TRUE, na_rm = TRUE),
"girls"  = ~ qwraps2::n_perc0(sex == "girls", show_symbol = TRUE, na_rm = TRUE)),
"burdenS" =
list("4" = ~ qwraps2::n_perc0(burdenS == "4", show_symbol = TRUE, na_rm = TRUE),
"5"  = ~ qwraps2::n_perc0(burdenS == "5", show_symbol = TRUE, na_rm = TRUE),
"6"  = ~ qwraps2::n_perc0(burdenS == "6", show_symbol = TRUE, na_rm = TRUE),
"7"  = ~ qwraps2::n_perc0(burdenS == "7", show_symbol = TRUE, na_rm = TRUE),
"8"  = ~ qwraps2::n_perc0(burdenS == "8", show_symbol = TRUE, na_rm = TRUE),
"9"  = ~ qwraps2::n_perc0(burdenS == "9", show_symbol = TRUE, na_rm = TRUE),
"10"  = ~ qwraps2::n_perc0(burdenS == "10", show_symbol = TRUE, na_rm = TRUE),
"11"  = ~ qwraps2::n_perc0(burdenS == "11", show_symbol = TRUE, na_rm = TRUE),
"12"  = ~ qwraps2::n_perc0(burdenS == "12", show_symbol = TRUE, na_rm = TRUE)),
"arztZ01" =
list("Mean (SD)" = ~ qwraps2::mean_sd(arztZ01, denote_sd = "paren", na_rm = TRUE, show_n = "never"))
)
summary_table(kiggs, Data_summary1)
library(qwraps2)
options(qwraps2_markup = "markdown")
Data_summary2 <-
list("age2" =
list("Observations with complete data: "    = ~ sum(complete.cases(age2)),
"Missing values: "  = ~ sum(!complete.cases(kiggs$age2))),
"sex" =
list("Observations with complete data: "    = ~ sum(complete.cases(sex)),
"Missing values: " = ~ sum(!complete.cases(kiggs$sex))),
"burdenS" =
list("Observations with complete data: "    = ~ sum(complete.cases(burdenS)),
"Missing values: " = ~ sum(!complete.cases(kiggs$burdenS))),
"arztZ01" =
list("Observations with complete data: "    = ~ sum(complete.cases(arztZ01)),
"Missing values: " = ~ sum(!complete.cases(arztZ01)))
)
summary_table(kiggs, Data_summary2)
#Transforming variables
predictorarztZ01<-as.numeric(as.character(kiggs$arztZ01))
#Converting factor frequency and amount factor variables to numeric
socialClass<-as.numeric(kiggs$schichtz)
totalSleep<-as.numeric(kiggs$e065z)
age2_num<-as.numeric(kiggs$age2)
#Fitting the linear model
regression_model<-lm(predictorarztZ01 ~ kiggs$burdenS + kiggs$sex + age2_num + socialClass + totalSleep)
regression_model
summary(regression_model)$coefficients[,1]
# Estimation of 95% confidence intervals of the regression coefficient
confint(regression_model, level = 0.95)
#Reporting p values of the predictors
summary(regression_model)$coefficients[,4]
summary(regression_model)
library(foreign)
data <- read.spss("Data/KiGGS03_06.sav", to.data.frame=TRUE)
data
kiggs <- data[,c('E070M','E070V','E072','E074','arztZ01','sex','age2','schichtz','e065z')]
kiggs
# Formatting the data
kiggs$E070M    <- factor(kiggs$E070M,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E070V    <- factor(kiggs$E070V,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E072     <- factor(kiggs$E072,     labels = c("yes, regularly", "yes, from time to time", "no, never"))
kiggs$E074     <- factor(kiggs$E074,     labels = c("yes, regularly", "yes, from time to time", "no, never", "has not breastfed"))
kiggs$sex      <- factor(kiggs$sex,      labels = c("boys", "girls"))
kiggs$age2     <- factor(kiggs$age2,     labels = c("0-1y", "2-3y", "4-5y", "6-7y", "8-9y", "10-11y", "12-13y", "14-15y", "16-17y"))
kiggs$schichtz <- factor(kiggs$schichtz, labels = c("low social status", "medium social status", "high social status"))
#Saving the data in my computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
#Checking whether the variables E070M, E070V, E072, E074 are all factors or not
is.factor(kiggs$E070M)
is.factor(kiggs$E070V)
is.factor(kiggs$E072)
is.factor(kiggs$E074)
#Setting the value "has not breastfed" of variable E074 to NA for all children
kiggs["E074"][kiggs["E074"] == "has not breastfed"] <- "NA"
# Dropping the empty factor level or NA value from the variable
#kiggs[!is.na(kiggs$E074),]
kiggs = kiggs[complete.cases(kiggs[,c("E074")]),]
#Checking whether "has not breastfed" value is available or not
library(stringr)
check1 = kiggs[str_detect(kiggs$E074, "has not breastfed"), ]
print(paste(nrow(check1), "row found with has not breastfed value"))
# Checking whether empty factor has been removed or not
check2 = kiggs[str_detect(kiggs$E074, "NA"), ]
print(paste(nrow(check2), "row found with NA value"))
library(dplyr)
# The rank is "yes, regularly" = 1, "yes, from time to time" = 2, "no, never" = 3. Keeping NA value same.
RankForE070M = dense_rank(kiggs$E070M)
RankForE070V = dense_rank(kiggs$E070V)
RankForE072 = dense_rank(kiggs$E072)
RankForE074 = dense_rank(kiggs$E074)
burdenS = RankForE070M + RankForE070V + RankForE072 + RankForE074
burdenS
# Adding the burdenS variable to the kiggs dataset
kiggs["burdenS"] = burdenS
#updating the kiggs file that is saved in computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
# Absolute frequency table
AFage2 <- table(kiggs$age2)
AFsex <-  table(kiggs$sex)
AFburdenS <- table(kiggs$burdenS)
AFage2
AFsex
AFburdenS
library(qwraps2)
options(qwraps2_markup = "markdown")
# Define format for the table:
Data_summary1 <-
list("age2" =
list("0-1y" = ~ qwraps2::n_perc0(age2 == "0-1y", show_symbol = TRUE, na_rm = TRUE),
"2-3y"  = ~ qwraps2::n_perc0(age2 == "2-3y", show_symbol = TRUE, na_rm = TRUE),
"4-5y"  = ~ qwraps2::n_perc0(age2 == "4-5y", show_symbol = TRUE, na_rm = TRUE),
"6-7y"  = ~ qwraps2::n_perc0(age2 == "6-7y", show_symbol = TRUE, na_rm = TRUE),
"8-9y"  = ~ qwraps2::n_perc0(age2 == "8-9y", show_symbol = TRUE, na_rm = TRUE),
"10-11y"  = ~ qwraps2::n_perc0(age2 == "10-11y", show_symbol = TRUE, na_rm = TRUE),
"12-13y"  = ~ qwraps2::n_perc0(age2 == "12-13y", show_symbol = TRUE, na_rm = TRUE),
"14-15y"  = ~ qwraps2::n_perc0(age2 == "14-15y", show_symbol = TRUE, na_rm = TRUE),
"16-17y"  = ~ qwraps2::n_perc0(age2 == "16-17y", show_symbol = TRUE, na_rm = TRUE)),
"sex" =
list("boys" = ~ qwraps2::n_perc0(sex == "boys", show_symbol = TRUE, na_rm = TRUE),
"girls"  = ~ qwraps2::n_perc0(sex == "girls", show_symbol = TRUE, na_rm = TRUE)),
"burdenS" =
list("4" = ~ qwraps2::n_perc0(burdenS == "4", show_symbol = TRUE, na_rm = TRUE),
"5"  = ~ qwraps2::n_perc0(burdenS == "5", show_symbol = TRUE, na_rm = TRUE),
"6"  = ~ qwraps2::n_perc0(burdenS == "6", show_symbol = TRUE, na_rm = TRUE),
"7"  = ~ qwraps2::n_perc0(burdenS == "7", show_symbol = TRUE, na_rm = TRUE),
"8"  = ~ qwraps2::n_perc0(burdenS == "8", show_symbol = TRUE, na_rm = TRUE),
"9"  = ~ qwraps2::n_perc0(burdenS == "9", show_symbol = TRUE, na_rm = TRUE),
"10"  = ~ qwraps2::n_perc0(burdenS == "10", show_symbol = TRUE, na_rm = TRUE),
"11"  = ~ qwraps2::n_perc0(burdenS == "11", show_symbol = TRUE, na_rm = TRUE),
"12"  = ~ qwraps2::n_perc0(burdenS == "12", show_symbol = TRUE, na_rm = TRUE)),
"arztZ01" =
list("Mean (SD)" = ~ qwraps2::mean_sd(arztZ01, denote_sd = "paren", na_rm = TRUE, show_n = "never"))
)
summary_table(kiggs, Data_summary1)
library(qwraps2)
options(qwraps2_markup = "markdown")
Data_summary2 <-
list("age2" =
list("Observations with complete data: "    = ~ sum(complete.cases(age2)),
"Missing values: "  = ~ sum(!complete.cases(kiggs$age2))),
"sex" =
list("Observations with complete data: "    = ~ sum(complete.cases(sex)),
"Missing values: " = ~ sum(!complete.cases(kiggs$sex))),
"burdenS" =
list("Observations with complete data: "    = ~ sum(complete.cases(burdenS)),
"Missing values: " = ~ sum(!complete.cases(kiggs$burdenS))),
"arztZ01" =
list("Observations with complete data: "    = ~ sum(complete.cases(arztZ01)),
"Missing values: " = ~ sum(!complete.cases(arztZ01)))
)
summary_table(kiggs, Data_summary2)
#Transforming variables
predictorarztZ01<-as.numeric(as.character(kiggs$arztZ01))
#Converting factor frequency and amount factor variables to numeric
socialClass<-as.numeric(kiggs$schichtz)
totalSleep<-as.numeric(kiggs$e065z)
age2_num<-as.numeric(kiggs$age2)
#Fitting the linear model
regression_model<-lm(predictorarztZ01 ~ kiggs$burdenS + kiggs$sex + age2_num + socialClass + totalSleep)
regression_model
summary(regression_model)$coefficients[,1]
# Estimation of 95% confidence intervals of the regression coefficient
confint(regression_model, level = 0.95)
#Reporting p values of the predictors
summary(regression_model)$coefficients[,4]
knitr::opts_chunk$set(echo = TRUE)
#install.packages("haven") # Install haven package
library(haven)            # Load haven package
data <- read_sav("KiGGS03_06.sav") # Reading data
library(pwr)
effect_size <- 0.2 / 0.5 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.2 / 0.5 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.5 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.8 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.2 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.5 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
effect_size <- 0.5
alpha <- 0.05
power <- 0.80
sd <- 0.5
n <- pwr.t.test(n = NULL, d = effect_size, sig.level = alpha, power = power, type = "two.sample", alternative = "two.sided")
library(pwr)
effect_size <- 0.5
alpha <- 0.05
power <- 0.80
sd <- 0.5
n <- pwr.t.test(n = NULL, d = effect_size, sig.level = alpha, power = power, type = "two.sample", alternative = "two.sided")
library(pwr)
effect_size <- 0.5
alpha <- 0.05
power <- 0.80
sd <- 0.5
n <- pwr.t.test(n = NULL, d = effect_size, sig.level = alpha, power = power, type = "two.sample", alternative = "two.sided")
n
library(pwr)
effect_size <- 0.5 # Expected difference / standard deviation
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
pwr.mannwhitney.n(0.5, power = 0.8, sig.level = 0.05)
library(pwr)
pwr.mannwhitneyu(u = NULL, v = NULL, n = NULL, sig.level = 0.05, power = 0.8, alternative = "two.sided")
library(pwr)
pwr.mannwhitneyu(u = NULL, v = NULL, n = NULL, sig.level = 0.05, power = 0.8, alternative = "two.sided", r = 0.5)
library(pwr)
effect_size <- 0.5
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
# Load the pwr package
library(pwr)
# Set the desired power and significance level
power <- 0.8
sig_level <- 0.05
# Set the expected effect size
# We can use Cohen's f^2 measure of effect size, which is a common measure for linear regression models
# A medium effect size is typically around 0.15 to 0.25
effect_size <- 0.5
# Calculate the sample size
n <- pwr.f2.test(power=power, sig.level=sig_level, f2=effect_size)$n
library(pwr)
# Load the pwr package
library(pwr)
# Set the desired power and significance level
power <- 0.8
sig_level <- 0.05
# Set the expected effect size
# We can use Cohen's f^2 measure of effect size, which is a common measure for linear regression models
# A medium effect size is typically around 0.15 to 0.25
effect_size <- 0.5
# Calculate the sample size
n <- pwr.f2.test(power=power, sig.level=sig_level, f2=effect_size)
# Load the pwr package
library(pwr)
# Set the desired power and significance level
power <- 0.8
sig_level <- 0.05
# Set the expected effect size
# We can use Cohen's f^2 measure of effect size, which is a common measure for linear regression models
# A medium effect size is typically around 0.15 to 0.25
effect_size <- 0.2
# Calculate the sample size
n <- pwr.f2.test(power=power, sig.level=sig_level, f2=effect_size, df1=1, df2=1000)$n
# Load the pwr package
library(pwr)
# Set the desired power and significance level
power <- 0.8
sig_level <- 0.05
# Set the expected effect size
# We can use Cohen's f^2 measure of effect size, which is a common measure for linear regression models
# A medium effect size is typically around 0.15 to 0.25
effect_size <- 0.2
# Calculate the sample size
n <- pwr.f2.test(power=power, sig.level=sig_level, f2=effect_size)$n
library(pwr)
effect_size <- 0.5
power <- 0.8
sig_level <- 0.05
pwr.t.test(d = effect_size, power = power, sig.level = sig_level, type = "two.sample")
library(pwr)
d <- 0.5
power <- 0.8
sig.level <- 0.05
sd <- 0.2
pwr.t.test(d = d, power = power, sig.level = sig.level, sd = sd, alternative = "two.sided")
library(pwr)
d <- 0.5
power <- 0.8
sig.level <- 0.05
pwr.t.test(d = d, power = power, sig.level = sig.level, alternative = "two.sided")
library(pwr)
d <- 0.5
power <- 0.8
sig.level <- 0.05
pwr.t.test(d = d, power = power, sig.level = sig.level, alternative = "two.sided")
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
data <- read.spss("Data/KiGGS03_06.sav", to.data.frame=TRUE)
data
kiggs <- data[,c('E070M','E070V','E072','E074','arztZ01','sex','age2','schichtz','e065z')]
kiggs
# Formatting the data
kiggs$E070M    <- factor(kiggs$E070M,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E070V    <- factor(kiggs$E070V,    labels = c("yes, daily", "yes, occasionally", "no"))
kiggs$E072     <- factor(kiggs$E072,     labels = c("yes, regularly", "yes, from time to time", "no, never"))
kiggs$E074     <- factor(kiggs$E074,     labels = c("yes, regularly", "yes, from time to time", "no, never", "has not breastfed"))
kiggs$sex      <- factor(kiggs$sex,      labels = c("boys", "girls"))
kiggs$age2     <- factor(kiggs$age2,     labels = c("0-1y", "2-3y", "4-5y", "6-7y", "8-9y", "10-11y", "12-13y", "14-15y", "16-17y"))
kiggs$schichtz <- factor(kiggs$schichtz, labels = c("low social status", "medium social status", "high social status"))
#Saving the data in my computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
#Checking whether the variables E070M, E070V, E072, E074 are all factors or not
is.factor(kiggs$E070M)
is.factor(kiggs$E070V)
is.factor(kiggs$E072)
is.factor(kiggs$E074)
#Setting the value "has not breastfed" of variable E074 to NA for all children
kiggs["E074"][kiggs["E074"] == "has not breastfed"] <- "NA"
# Dropping the empty factor level or NA value from the variable
#kiggs[!is.na(kiggs$E074),]
kiggs = kiggs[complete.cases(kiggs[,c("E074")]),]
#Checking whether "has not breastfed" value is available or not
library(stringr)
check1 = kiggs[str_detect(kiggs$E074, "has not breastfed"), ]
print(paste(nrow(check1), "row found with has not breastfed value"))
# Checking whether empty factor has been removed or not
check2 = kiggs[str_detect(kiggs$E074, "NA"), ]
print(paste(nrow(check2), "row found with NA value"))
library(dplyr)
# The rank is "yes, regularly" = 1, "yes, from time to time" = 2, "no, never" = 3. Keeping NA value same.
RankForE070M = dense_rank(kiggs$E070M)
RankForE070V = dense_rank(kiggs$E070V)
RankForE072 = dense_rank(kiggs$E072)
RankForE074 = dense_rank(kiggs$E074)
burdenS = RankForE070M + RankForE070V + RankForE072 + RankForE074
burdenS
# Adding the burdenS variable to the kiggs dataset
kiggs["burdenS"] = burdenS
#updating the kiggs file that is saved in computer
write.csv(kiggs, "Data/kiggs.csv", row.names=FALSE)
# Absolute frequency table
AFage2 <- table(kiggs$age2)
AFsex <-  table(kiggs$sex)
AFburdenS <- table(kiggs$burdenS)
AFage2
AFsex
AFburdenS
library(qwraps2)
options(qwraps2_markup = "markdown")
# Define format for the table:
Data_summary1 <-
list("age2" =
list("0-1y" = ~ qwraps2::n_perc0(age2 == "0-1y", show_symbol = TRUE, na_rm = TRUE),
"2-3y"  = ~ qwraps2::n_perc0(age2 == "2-3y", show_symbol = TRUE, na_rm = TRUE),
"4-5y"  = ~ qwraps2::n_perc0(age2 == "4-5y", show_symbol = TRUE, na_rm = TRUE),
"6-7y"  = ~ qwraps2::n_perc0(age2 == "6-7y", show_symbol = TRUE, na_rm = TRUE),
"8-9y"  = ~ qwraps2::n_perc0(age2 == "8-9y", show_symbol = TRUE, na_rm = TRUE),
"10-11y"  = ~ qwraps2::n_perc0(age2 == "10-11y", show_symbol = TRUE, na_rm = TRUE),
"12-13y"  = ~ qwraps2::n_perc0(age2 == "12-13y", show_symbol = TRUE, na_rm = TRUE),
"14-15y"  = ~ qwraps2::n_perc0(age2 == "14-15y", show_symbol = TRUE, na_rm = TRUE),
"16-17y"  = ~ qwraps2::n_perc0(age2 == "16-17y", show_symbol = TRUE, na_rm = TRUE)),
"sex" =
list("boys" = ~ qwraps2::n_perc0(sex == "boys", show_symbol = TRUE, na_rm = TRUE),
"girls"  = ~ qwraps2::n_perc0(sex == "girls", show_symbol = TRUE, na_rm = TRUE)),
"burdenS" =
list("4" = ~ qwraps2::n_perc0(burdenS == "4", show_symbol = TRUE, na_rm = TRUE),
"5"  = ~ qwraps2::n_perc0(burdenS == "5", show_symbol = TRUE, na_rm = TRUE),
"6"  = ~ qwraps2::n_perc0(burdenS == "6", show_symbol = TRUE, na_rm = TRUE),
"7"  = ~ qwraps2::n_perc0(burdenS == "7", show_symbol = TRUE, na_rm = TRUE),
"8"  = ~ qwraps2::n_perc0(burdenS == "8", show_symbol = TRUE, na_rm = TRUE),
"9"  = ~ qwraps2::n_perc0(burdenS == "9", show_symbol = TRUE, na_rm = TRUE),
"10"  = ~ qwraps2::n_perc0(burdenS == "10", show_symbol = TRUE, na_rm = TRUE),
"11"  = ~ qwraps2::n_perc0(burdenS == "11", show_symbol = TRUE, na_rm = TRUE),
"12"  = ~ qwraps2::n_perc0(burdenS == "12", show_symbol = TRUE, na_rm = TRUE)),
"arztZ01" =
list("Mean (SD)" = ~ qwraps2::mean_sd(arztZ01, denote_sd = "paren", na_rm = TRUE, show_n = "never"))
)
summary_table(kiggs, Data_summary1)
library(qwraps2)
options(qwraps2_markup = "markdown")
Data_summary2 <-
list("age2" =
list("Observations with complete data: "    = ~ sum(complete.cases(age2)),
"Missing values: "  = ~ sum(!complete.cases(kiggs$age2))),
"sex" =
list("Observations with complete data: "    = ~ sum(complete.cases(sex)),
"Missing values: " = ~ sum(!complete.cases(kiggs$sex))),
"burdenS" =
list("Observations with complete data: "    = ~ sum(complete.cases(burdenS)),
"Missing values: " = ~ sum(!complete.cases(kiggs$burdenS))),
"arztZ01" =
list("Observations with complete data: "    = ~ sum(complete.cases(arztZ01)),
"Missing values: " = ~ sum(!complete.cases(arztZ01)))
)
summary_table(kiggs, Data_summary2)
#Transforming variables
predictorarztZ01<-as.numeric(as.character(kiggs$arztZ01))
#Converting factor frequency and amount factor variables to numeric
socialClass<-as.numeric(kiggs$schichtz)
totalSleep<-as.numeric(kiggs$e065z)
age2_num<-as.numeric(kiggs$age2)
#Fitting the linear model
regression_model<-lm(predictorarztZ01 ~ kiggs$burdenS + kiggs$sex + age2_num + socialClass + totalSleep)
regression_model
summary(regression_model)$coefficients[,1]
# Estimation of 95% confidence intervals of the regression coefficient
confint(regression_model, level = 0.95)
#Reporting p values of the predictors
summary(regression_model)$coefficients[,4]
library(pwr)
d <- 0.5
power <- 0.8
sig.level <- 0.05
pwr.t.test(d = d, power = power, sig.level = sig.level, alternative = "two.sided")
<br>
